repeat
    wait()
until game:IsLoaded() and game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui") and
    game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("MainLeft") and
    game:GetService("Players").LocalPlayer.PlayerGui.MainLeft.Left.Currency.Diamonds.Diamonds.Visible == true and
    not game:GetService("Players").LocalPlayer:FindFirstChild("GUIFX Holder")
local plr = game.Players.LocalPlayer
local data = {
    username = plr.Name,
    note = _G.Config.Note,
    user_id = _G.Config.UserID,
    discord_id = _G.Config.discord_id,
    shard = 0,
    gem = 0,
    gem_per_min = 0,
    huge_poseidon_corgi = 0,
    unlocked_zones = 0,
    bucket = 0,
    total_huge = 0,
    total_tinatic = 0,
    rank = 1,
    rebirth = 0,
    rod = {},
    shovel = {},
    rng_coins = 0,
    dice = {},
    huge = {},
    titanic = {},
    rolls = 0,
    coins = 0,
    rap = 0,
    rap_per_min = 0,
    mastery = {},
    egg_hatch = 0,
    equip_slot = 0
}
local save = require(game:GetService("ReplicatedStorage").Library.Client.Save)
local mastery = require(game:GetService("ReplicatedStorage").Library.Types.Mastery)

pcall(function()
    function getrap()
        local rap = 0
        pcall(function()
            local rs = game:GetService("ReplicatedStorage")
            for uid, petData in save.Get().Inventory.Pet do
                local petItem = Items.Types["Pet"]:Get(uid)
                local petRAP = petItem:GetDevRAP() or 0 -- in case no rap
                rap = rap + petRAP
            end
        end)
        return math.floor(rap)
    end
end)

pcall(function()
    spawn(function()
        while wait() do
            pcall(function()
                if data.rebirth >= 4 then
                    local mastery = require(game:GetService("ReplicatedStorage").Library.Types.Mastery)
                    for i, v in next, save.Get().Mastery do
                        mastery[i] = {
                            Level = mastery.XPToLevel(v)
                        }
                    end
                end
            end)
        end
    end)
end)

pcall(function()
    spawn(function()
        while wait() do
            pcall(function()
                data.rap = getrap()
                data.equip_slot = save.Get().MaxPetsEquipped
                data.egg_hatch = save.Get().EggHatchCount
            end)
        end
    end)
end)

pcall(function()
    spawn(function()
        while wait() do
            pcall(function()
                for i, v in pairs(save.Get().Inventory.Currency) do
                    if v.id == "RngCoins" then
                        data.rng_coins = v._am
                    end
                    if v.id == "Coins" then
                        data.coins = tostring(v._am)
                    end
                end
                if game:GetService("Players").LocalPlayer.leaderstats:FindFirstChild("\240\159\142\178 Rolls") then
                    data.rolls = game:GetService("Players").LocalPlayer.leaderstats["\240\159\142\178 Rolls"].Value
                end
            end)
        end
    end)
end)

local lastValues = {}
pcall(function()
    local function hasValueChanged(id, value)
        if not lastValues[id] then
            return true
        end
        return lastValues[id] ~= value
    end
end)

pcall(function()
    spawn(function()
        while wait() do
            pcall(function()
                for i, v in pairs(save.Get().Inventory.Misc) do
                    if v.id == "Bucket" then
                        data.bucket = v._am
                    end
                    if v.id == "Magic Shard" then
                        data.shard = v._am
                    end
                    if string.find(v.id, "Dice") then
                        if not data.dice[v.id] then
                            data.dice[v.id] = {}
                        end
                        if hasValueChanged(v.id, v._am) then
                            table.insert(data.dice[v.id], v._am)
                            lastValues[v.id] = v._am
                        end
                    end
                    if string.find(v.id, "Rod") and not table.find(data.rod, v.id) then
                        table.insert(data.rod, v.id)
                    end
                    if string.find(v.id, "Shovel") and not table.find(data.shovel, v.id) then
                        table.insert(data.shovel, v.id)
                    end
                end
            end)
        end
    end)
end)

pcall(function()
    function checknote(table, value)
        for _, v in ipairs(table) do
            if v == value then
                return true
            end
        end
        return false
    end
end)

pcall(function()
    spawn(function()
        while wait() do
            pcall(function()
                for i, v in next, save.Get() do
                    if i == "Rank" then
                        data.rank = v
                    end
                    if i == "Rebirths" then
                        data.rebirth = v
                    end
                end
                data.gem = game:GetService("Players").LocalPlayer.leaderstats["\240\159\146\142 Diamonds"].Value
            end)
        end
    end)
end)

pcall(function()
    function getzone()
        local total = 0
        pcall(function()
            for i, v in next, save.Get().UnlockedZones do
                total = total + 1
            end
        end)
        return total
    end
end)

pcall(function()
    spawn(function()
        while wait() do
            pcall(function()
                data.unlocked_zones = getzone()
            end)
        end
    end)
end)

local old = game:GetService("Players").LocalPlayer.leaderstats["\240\159\146\142 Diamonds"].Value
data.gem_per_min = math.floor(
    (game:GetService("Players").LocalPlayer.leaderstats["\240\159\146\142 Diamonds"].Value - old))
old = game:GetService("Players").LocalPlayer.leaderstats["\240\159\146\142 Diamonds"].Value

pcall(function()
    spawn(function()
        while wait(60) do
            pcall(function()
                data.gem_per_min = math.floor((game:GetService("Players").LocalPlayer.leaderstats["\240\159\146\142 Diamonds"]
                                                .Value - old))
                old = game:GetService("Players").LocalPlayer.leaderstats["\240\159\146\142 Diamonds"].Value
            end)
        end
    end)
end)

while true do
    pcall(function()
        data.total_huge = 0
        data.total_tinatic = 0

        for i, v in pairs(save.Get().Inventory.Pet) do
            if string.find(v.id, "Huge") then
                if not checknote(data.huge, v.id) then
                    table.insert(data.huge, v.id)
                end
                data.total_huge = data.total_huge + 1
            end
            if string.find(v.id, "Titanic") then
                if not checknote(data.titanic, v.id) then
                    table.insert(data.titanic, v.id)
                end
                data.total_tinatic = data.total_tinatic + 1
            end
            if v.id == "Huge Poseidon Corgi" then
                data.huge_poseidon_corgi = data.huge_poseidon_corgi + 1
            end
        end
    end)
    pcall(function()
        local aa = request({
            Url = "https://yummytrackstat.com/api/pet99/trackings",
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = game:GetService('HttpService'):JSONEncode(data)
        })

        
    end)
    writefile(plr.Name .. "pet99.json", game:GetService('HttpService'):JSONEncode(data))
    wait(70)
end
